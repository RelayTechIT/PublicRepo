$StartDiskVolume    =       get-volume -DriveLetter C
$TotalDiskGB        =       [math]::round($StartDiskVolume.size / 1GB,2)
$StartDiskUsedGB    =       [math]::round((($StartDiskVolume.size - $StartDiskVolume.SizeRemaining) / 1GB),2)
$StartDiskPercent    =       [math]::round(($StartDiskUsedGB / $TotalDiskGB * 100),0)

# Write-Host "Total Disk Size:`t`t$TotalDiskGB GB"
# Write-Host "Disk Space Used:`t`t$StartDiskUsedGB GB"
# Write-Host ""
# Write-Host "Current Disk is %$StartDiskPercent full"

function _DirDelete {
    param ($DirectoryPath)

    If (Test-Path $DirectoryPath) {    
        $GB = [math]::round((Get-ChildItem $DirectoryPath -Recurse | Measure-Object -Property Length -Sum).Sum / 1GB,2)
        Write-Host "$DirectoryPath has been found and is $GB GB in size"
        remove-item $DirectoryPath -Recurse -Force -ErrorAction SilentlyContinue
        If ($LASTEXITCODE -eq 0) {
            Write-Host "Deleted folder $DirectoryPath freeing up $GB GB of space."
        } else {
            Write-Host "Error deleting folder $DirectoryPath"
        }
        
    } else {
        Write-Host "$DirectoryPath does not exist"
    }
} # _DirDelete

function _DirDeleteContents {
    param ($DirectoryPath)

    If (Test-Path $DirectoryPath) {    
        $GB = [math]::round((Get-ChildItem $DirectoryPath -Recurse | Measure-Object -Property Length -Sum).Sum / 1GB,2)
        Write-Host "$DirectoryPath has been found and is $GB GB in size"
        remove-item $DirectoryPath\* -Recurse -Force -ErrorAction SilentlyContinue
#        If ($LASTEXITCODE -eq 0) {
#            Write-Host "Deleted contents of folder $DirectoryPath freeing up $GB GB of space."
#        } else {
#            Write-Host "Error deleting contents of folder $DirectoryPath"
#        }   
    } else {
        Write-Host "$f does not exist"
    }
} # _DirDeleteContents



$FoldersToDelete = "C:\Windows.old","C:\Windows10Upgrade"
foreach ($f in $FoldersToDelete) {_DirDelete -DirectoryPath $f}

$FoldersToEmpty = "C:\Windows\Temp","C:\Temp"
foreach ($f in $FoldersToEmpty) {_DirDeleteContents -DirectoryPath $f}

$UserProfileData = "Appdata\Local\Temp"
foreach ($Upd in $UserProfileData) {
    foreach ($u in (gci C:\Users -Directory).Name) {
        _DirDeleteContents -DirectoryPath "C:\Users\$u\$Upd"
    }
}

# Delete Recycle Bin
Clear-RecycleBin -Force

# Delete user profiles over 60 days old

$ProfileAge = 60
$ProgressPreference = 'SilentlyContinue' 
$lcldir     =   'C:\RTSupport\Utilities'
$lclfldr    =   'DelProf2'
get-process *delprof* | Stop-Process

If (gci -Path $lcldir -Recurse Delprof2.exe) {
    $d = gci -Path $lcldir -Recurse Delprof2.exe
} else {
    If (!(Test-Path $lcldir)) {New-Item $lcldir -ItemType Directory -Force}
    iwr -Uri 'https://helgeklein.com/downloads/DelProf2/current/Delprof2%201.6.0.zip' -OutFile $lcldir\$lclfldr`.zip
    Expand-Archive -Path $lcldir\$lclfldr`.zip -DestinationPath $lcldir -Force
    $d = gci -Path $lcldir -Recurse Delprof2.exe
}    

If ($ProfileAge -eq 0) {
    $proc = & $d.FullName /l
} else {
    $proc = & $d.FullName /d:$ProfileAge /l
}

$ProfilesIgnored    =   @()
$ProfilesToDelete   =   @()

foreach ($l in $proc) {
    If ($l -match $env:COMPUTERNAME) {
        If ($l -match "Ignoring") {
            $split = $l -split {$_ -eq "'" -or $_ -eq "\"}
            $ProfilesIgnored += $split[$split.count - 2]
        } else {
            If ($l -notmatch "Listing inactive profiles") {
                $split = $l -split {$_ -eq "'" -or $_ -eq "\"}
                $ProfilesToDelete += $split[$split.count - 1]
            }
        }
    }
}

foreach ($p in $ProfilesToDelete) {
    Write-Host "Deleting profile $p"
    start-process $d.FullName -argumentlist "/id:$p /u" -wait -NoNewWindow
}


$EndDiskVolume    =       get-volume -DriveLetter C
$EndDiskUsedGB    =       [math]::round((($EndDiskVolume.size - $EndDiskVolume.SizeRemaining) / 1GB),2)
$EndDiskPercent    =       [math]::round(($EndDiskUsedGB / $TotalDiskGB * 100),0)

$SpaceSavedGB = $StartDiskUsedGB - $EndDiskUsedGB

Write-Host "Total Disk Size:`t`t$TotalDiskGB GB"
Write-Host "Disk Space Used at Start:`t`t$StartDiskUsedGB GB"
Write-Host ""
Write-Host "Current Disk at Start is %$StartDiskPercent full"
Write-Host ""
Write-Host ""
Write-Host "Disk Space Used at End:`t`t$EndDiskUsedGB GB"
Write-Host ""
Write-Host "Current Disk at End is %$EndDiskPercent full"
Write-Host ""
Write-Host ""
Write-Host "Script cleared up $SpaceSavedGB GB of disk space."
