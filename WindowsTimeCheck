$TZ = Get-TimeZone
$TS = Get-Service "Windows Time" | select *
$w32tm = w32tm /query /status

Write-Host Current TimeZome is: $TZ.Id with offset: $TZ.BaseUtcOffset
Write-Host Windows Time Service is $TS.Status with a startup type of: $TS.StartType

foreach ($l in $w32tm) {
    Switch ($l)
    {
        {$_ -match "Last Successful Sync Time:"} {
#            Write-Host "Last Successful Sync:" $l.Split(':',2)[1].trim()
            $LastSync = $l.Split(':',2)[1].trim()
        }
        {$_ -match "Source:"} {
#            Write-Host "Source:" $l.Split(':',2)[1].trim()
            $Source = $l.Split(':',2)[1].trim()
        }
        {$_ -match "The following error occurred:"} {
            $W32tmErr = $l.Split(':',2)[1].trim()
        }
    }
}

If ($W32tmErr) {
    Write-Host Error running W32tm. Error message: $W32tmErr -ForegroundColor Red
} else {
    Write-Host Current Time Server: $Source
    Write-Host Last Time Server Sync: $LastSync
}

